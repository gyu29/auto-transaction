// Generated by view binder compiler. Do not edit!
package com.hanatransaction.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.chip.Chip;
import com.google.android.material.textfield.TextInputEditText;
import com.hanatransaction.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentNewTransactionBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton buttonCancel;

  @NonNull
  public final Chip buttonDaily;

  @NonNull
  public final MaterialButton buttonDate;

  @NonNull
  public final Chip buttonMonthly;

  @NonNull
  public final Chip buttonOnce;

  @NonNull
  public final MaterialButton buttonSave;

  @NonNull
  public final Chip buttonWeekly;

  @NonNull
  public final Chip buttonYearly;

  @NonNull
  public final TextInputEditText editTextAccountNumber;

  @NonNull
  public final TextInputEditText editTextAmount;

  @NonNull
  public final TextInputEditText editTextMemo;

  @NonNull
  public final TextInputEditText editTextRecipientName;

  @NonNull
  public final ProgressBar progressBar;

  private FragmentNewTransactionBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton buttonCancel, @NonNull Chip buttonDaily,
      @NonNull MaterialButton buttonDate, @NonNull Chip buttonMonthly, @NonNull Chip buttonOnce,
      @NonNull MaterialButton buttonSave, @NonNull Chip buttonWeekly, @NonNull Chip buttonYearly,
      @NonNull TextInputEditText editTextAccountNumber, @NonNull TextInputEditText editTextAmount,
      @NonNull TextInputEditText editTextMemo, @NonNull TextInputEditText editTextRecipientName,
      @NonNull ProgressBar progressBar) {
    this.rootView = rootView;
    this.buttonCancel = buttonCancel;
    this.buttonDaily = buttonDaily;
    this.buttonDate = buttonDate;
    this.buttonMonthly = buttonMonthly;
    this.buttonOnce = buttonOnce;
    this.buttonSave = buttonSave;
    this.buttonWeekly = buttonWeekly;
    this.buttonYearly = buttonYearly;
    this.editTextAccountNumber = editTextAccountNumber;
    this.editTextAmount = editTextAmount;
    this.editTextMemo = editTextMemo;
    this.editTextRecipientName = editTextRecipientName;
    this.progressBar = progressBar;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNewTransactionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNewTransactionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_new_transaction, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNewTransactionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonCancel;
      MaterialButton buttonCancel = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancel == null) {
        break missingId;
      }

      id = R.id.buttonDaily;
      Chip buttonDaily = ViewBindings.findChildViewById(rootView, id);
      if (buttonDaily == null) {
        break missingId;
      }

      id = R.id.buttonDate;
      MaterialButton buttonDate = ViewBindings.findChildViewById(rootView, id);
      if (buttonDate == null) {
        break missingId;
      }

      id = R.id.buttonMonthly;
      Chip buttonMonthly = ViewBindings.findChildViewById(rootView, id);
      if (buttonMonthly == null) {
        break missingId;
      }

      id = R.id.buttonOnce;
      Chip buttonOnce = ViewBindings.findChildViewById(rootView, id);
      if (buttonOnce == null) {
        break missingId;
      }

      id = R.id.buttonSave;
      MaterialButton buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.buttonWeekly;
      Chip buttonWeekly = ViewBindings.findChildViewById(rootView, id);
      if (buttonWeekly == null) {
        break missingId;
      }

      id = R.id.buttonYearly;
      Chip buttonYearly = ViewBindings.findChildViewById(rootView, id);
      if (buttonYearly == null) {
        break missingId;
      }

      id = R.id.editTextAccountNumber;
      TextInputEditText editTextAccountNumber = ViewBindings.findChildViewById(rootView, id);
      if (editTextAccountNumber == null) {
        break missingId;
      }

      id = R.id.editTextAmount;
      TextInputEditText editTextAmount = ViewBindings.findChildViewById(rootView, id);
      if (editTextAmount == null) {
        break missingId;
      }

      id = R.id.editTextMemo;
      TextInputEditText editTextMemo = ViewBindings.findChildViewById(rootView, id);
      if (editTextMemo == null) {
        break missingId;
      }

      id = R.id.editTextRecipientName;
      TextInputEditText editTextRecipientName = ViewBindings.findChildViewById(rootView, id);
      if (editTextRecipientName == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      return new FragmentNewTransactionBinding((ScrollView) rootView, buttonCancel, buttonDaily,
          buttonDate, buttonMonthly, buttonOnce, buttonSave, buttonWeekly, buttonYearly,
          editTextAccountNumber, editTextAmount, editTextMemo, editTextRecipientName, progressBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
