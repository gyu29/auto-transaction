// Generated by view binder compiler. Do not edit!
package com.hanatransaction.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.hanatransaction.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTransactionsBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton buttonClearTransactions;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recyclerViewTransactions;

  @NonNull
  public final SwipeRefreshLayout swipeRefresh;

  @NonNull
  public final TextView textViewNoTransactions;

  @NonNull
  public final Toolbar toolbar;

  private FragmentTransactionsBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton buttonClearTransactions, @NonNull ProgressBar progressBar,
      @NonNull RecyclerView recyclerViewTransactions, @NonNull SwipeRefreshLayout swipeRefresh,
      @NonNull TextView textViewNoTransactions, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.buttonClearTransactions = buttonClearTransactions;
    this.progressBar = progressBar;
    this.recyclerViewTransactions = recyclerViewTransactions;
    this.swipeRefresh = swipeRefresh;
    this.textViewNoTransactions = textViewNoTransactions;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTransactionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTransactionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_transactions, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTransactionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonClearTransactions;
      MaterialButton buttonClearTransactions = ViewBindings.findChildViewById(rootView, id);
      if (buttonClearTransactions == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recyclerViewTransactions;
      RecyclerView recyclerViewTransactions = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewTransactions == null) {
        break missingId;
      }

      id = R.id.swipeRefresh;
      SwipeRefreshLayout swipeRefresh = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefresh == null) {
        break missingId;
      }

      id = R.id.textViewNoTransactions;
      TextView textViewNoTransactions = ViewBindings.findChildViewById(rootView, id);
      if (textViewNoTransactions == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentTransactionsBinding((CoordinatorLayout) rootView, buttonClearTransactions,
          progressBar, recyclerViewTransactions, swipeRefresh, textViewNoTransactions, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
